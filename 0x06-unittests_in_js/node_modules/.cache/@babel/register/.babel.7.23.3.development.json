{"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/0-calcul.test.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.3:development":{"value":{"code":"const assert = require('assert');\nconst calculateNumber = require('./0-calcul');\ndescribe('calcualateNumber', () => {\n  it('integer whole numbers', () => {\n    assert.strictEqual(calculateNumber(1, 3), 4);\n  });\n  it('rounding down a\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(2.3, 3.0), 5);\n  });\n  it('rounding down b\\'s floating point  number', () => {\n    assert.strictEqual(calculateNumber(2.0, 2.4), 4);\n  });\n  it('rounding down both a\\'s and b\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.4, 2.3), 3);\n  });\n  it('rounding up a\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.5, 2.0), 4);\n  });\n  it('rounding up b\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.0, 2.6), 4);\n  });\n  it('rounding up both a\\'s and b\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.5, 2.6), 5);\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhc3NlcnQiLCJyZXF1aXJlIiwiY2FsY3VsYXRlTnVtYmVyIiwiZGVzY3JpYmUiLCJpdCIsInN0cmljdEVxdWFsIl0sInNvdXJjZVJvb3QiOiIvYWx4LWJhY2tlbmQtamF2YXNjcmlwdC8weDA2LXVuaXR0ZXN0c19pbl9qcy8iLCJzb3VyY2VzIjpbIjAtY2FsY3VsLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXNzZXJ0ID0gcmVxdWlyZSgnYXNzZXJ0Jyk7XG5jb25zdCBjYWxjdWxhdGVOdW1iZXIgPSByZXF1aXJlKCcuLzAtY2FsY3VsJyk7XG5cbmRlc2NyaWJlKCdjYWxjdWFsYXRlTnVtYmVyJywgKCkgPT4ge1xuICBpdCgnaW50ZWdlciB3aG9sZSBudW1iZXJzJywgKCkgPT4ge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMSwgMyksIDQpO1xuICB9KTtcblxuICBpdCgncm91bmRpbmcgZG93biBhXFwncyBmbG9hdGluZyBwb2ludCBudW1iZXInLCAoKSA9PiB7XG4gICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcigyLjMsIDMuMCksIDUpO1xuICB9KTtcblxuICBpdCgncm91bmRpbmcgZG93biBiXFwncyBmbG9hdGluZyBwb2ludCAgbnVtYmVyJywgKCkgPT4ge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMi4wLCAyLjQpLCA0KTtcbiAgfSk7XG5cbiAgaXQoJ3JvdW5kaW5nIGRvd24gYm90aCBhXFwncyBhbmQgYlxcJ3MgZmxvYXRpbmcgcG9pbnQgbnVtYmVyJywgKCkgPT4ge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMS40LCAyLjMpLCAzKTtcbiAgfSk7XG5cbiAgaXQoJ3JvdW5kaW5nIHVwIGFcXCdzIGZsb2F0aW5nIHBvaW50IG51bWJlcicsICgpID0+IHtcbiAgICBhc3NlcnQuc3RyaWN0RXF1YWwoY2FsY3VsYXRlTnVtYmVyKDEuNSwgMi4wKSwgNCk7XG4gIH0pO1xuXG4gIGl0KCdyb3VuZGluZyB1cCBiXFwncyBmbG9hdGluZyBwb2ludCBudW1iZXInLCAoKSA9PiB7XG4gICAgYXNzZXJ0LnN0cmljdEVxdWFsKGNhbGN1bGF0ZU51bWJlcigxLjAsIDIuNiksIDQpO1xuICB9KTtcblxuICBpdCgncm91bmRpbmcgdXAgYm90aCBhXFwncyBhbmQgYlxcJ3MgZmxvYXRpbmcgcG9pbnQgbnVtYmVyJywgKCkgPT4ge1xuICAgIGFzc2VydC5zdHJpY3RFcXVhbChjYWxjdWxhdGVOdW1iZXIoMS41LCAyLjYpLCA1KTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQ2hDLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLFlBQVksQ0FBQztBQUU3Q0UsUUFBUSxDQUFDLGtCQUFrQixFQUFFLE1BQU07RUFDakNDLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSxNQUFNO0lBQ2hDSixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDOUMsQ0FBQyxDQUFDO0VBRUZFLEVBQUUsQ0FBQywwQ0FBMEMsRUFBRSxNQUFNO0lBQ25ESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBRUZFLEVBQUUsQ0FBQywyQ0FBMkMsRUFBRSxNQUFNO0lBQ3BESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBRUZFLEVBQUUsQ0FBQyx3REFBd0QsRUFBRSxNQUFNO0lBQ2pFSixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBRUZFLEVBQUUsQ0FBQyx3Q0FBd0MsRUFBRSxNQUFNO0lBQ2pESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBRUZFLEVBQUUsQ0FBQyx3Q0FBd0MsRUFBRSxNQUFNO0lBQ2pESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0VBRUZFLEVBQUUsQ0FBQyxzREFBc0QsRUFBRSxNQUFNO0lBQy9ESixNQUFNLENBQUNLLFdBQVcsQ0FBQ0gsZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUM7RUFDbEQsQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["assert","require","calculateNumber","describe","it","strictEqual"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.test.js"],"sourcesContent":["const assert = require('assert');\nconst calculateNumber = require('./0-calcul');\n\ndescribe('calcualateNumber', () => {\n  it('integer whole numbers', () => {\n    assert.strictEqual(calculateNumber(1, 3), 4);\n  });\n\n  it('rounding down a\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(2.3, 3.0), 5);\n  });\n\n  it('rounding down b\\'s floating point  number', () => {\n    assert.strictEqual(calculateNumber(2.0, 2.4), 4);\n  });\n\n  it('rounding down both a\\'s and b\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.4, 2.3), 3);\n  });\n\n  it('rounding up a\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.5, 2.0), 4);\n  });\n\n  it('rounding up b\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.0, 2.6), 4);\n  });\n\n  it('rounding up both a\\'s and b\\'s floating point number', () => {\n    assert.strictEqual(calculateNumber(1.5, 2.6), 5);\n  });\n});\n"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,eAAe,GAAGD,OAAO,CAAC,YAAY,CAAC;AAE7CE,QAAQ,CAAC,kBAAkB,EAAE,MAAM;EACjCC,EAAE,CAAC,uBAAuB,EAAE,MAAM;IAChCJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9C,CAAC,CAAC;EAEFE,EAAE,CAAC,0CAA0C,EAAE,MAAM;IACnDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFE,EAAE,CAAC,2CAA2C,EAAE,MAAM;IACpDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFE,EAAE,CAAC,wDAAwD,EAAE,MAAM;IACjEJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFE,EAAE,CAAC,wCAAwC,EAAE,MAAM;IACjDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFE,EAAE,CAAC,wCAAwC,EAAE,MAAM;IACjDJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;EAEFE,EAAE,CAAC,sDAAsD,EAAE,MAAM;IAC/DJ,MAAM,CAACK,WAAW,CAACH,eAAe,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC;EAClD,CAAC,CAAC;AACJ,CAAC,CAAC"}},"mtime":1700726385144},"{\"assumptions\":{},\"sourceRoot\":\"/alx-backend-javascript/0x06-unittests_in_js/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"filename\":\"/alx-backend-javascript/0x06-unittests_in_js/0-calcul.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/alx-backend-javascript/0x06-unittests_in_js\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.3:development":{"value":{"code":"const calculateNumber = (a, b) => {\n  return Math.round(a) + Math.round(b);\n};\nmodule.exports = calculateNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjYWxjdWxhdGVOdW1iZXIiLCJhIiwiYiIsIk1hdGgiLCJyb3VuZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LzB4MDYtdW5pdHRlc3RzX2luX2pzLyIsInNvdXJjZXMiOlsiMC1jYWxjdWwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY2FsY3VsYXRlTnVtYmVyID0gKGEsIGIpID0+IHtcbiAgcmV0dXJuIE1hdGgucm91bmQoYSkgKyBNYXRoLnJvdW5kKGIpO1xufTtcbm1vZHVsZS5leHBvcnRzID0gY2FsY3VsYXRlTnVtYmVyO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxlQUFlLEdBQUdBLENBQUNDLENBQUMsRUFBRUMsQ0FBQyxLQUFLO0VBQ2hDLE9BQU9DLElBQUksQ0FBQ0MsS0FBSyxDQUFDSCxDQUFDLENBQUMsR0FBR0UsSUFBSSxDQUFDQyxLQUFLLENBQUNGLENBQUMsQ0FBQztBQUN0QyxDQUFDO0FBQ0RHLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHTixlQUFlIn0=","map":{"version":3,"names":["calculateNumber","a","b","Math","round","module","exports"],"sourceRoot":"/alx-backend-javascript/0x06-unittests_in_js/","sources":["0-calcul.js"],"sourcesContent":["const calculateNumber = (a, b) => {\n  return Math.round(a) + Math.round(b);\n};\nmodule.exports = calculateNumber;\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EAChC,OAAOC,IAAI,CAACC,KAAK,CAACH,CAAC,CAAC,GAAGE,IAAI,CAACC,KAAK,CAACF,CAAC,CAAC;AACtC,CAAC;AACDG,MAAM,CAACC,OAAO,GAAGN,eAAe"}},"mtime":1700726246412}}